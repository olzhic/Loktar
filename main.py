import os
import telebot
from moviepy import AudioFileClip
import tempfile


class AudioBot:
    def __init__(self, token: str):
        self.bot = telebot.TeleBot(token)
        self._setup_handlers()

    def _setup_handlers(self):
        self.bot.message_handler(commands=['start'])(self.start_command)
        self.bot.message_handler(commands=['help'])(self.help_command)
        self.bot.message_handler(content_types=['audio', 'voice'])(self.handle_audio)

    def start_command(self, message):
        """Send a welcome message when the /start command is issued."""
        welcome_message = (
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ!\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –ª—é–±–æ–π –∞—É–¥–∏–æ—Ñ–∞–π–ª –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –º–æ–≥—É:\n"
            "- –£—Å–∫–æ—Ä–∏—Ç—å –∏–ª–∏ –∑–∞–º–µ–¥–ª–∏—Ç—å –µ–≥–æ\n"
            "- –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å\n"
            "- –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ–∂–¥—É —Ñ–æ—Ä–º–∞—Ç–∞–º–∏\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö."
        )
        self.bot.reply_to(message, welcome_message)

    def help_command(self, message):
        """Send a help message when the /help command is issued."""
        help_message = (
            "üéµ –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ:\n\n"
            "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
            "–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤:\n"
            "- 'speed:1.5' - –£—Å–∫–æ—Ä–∏—Ç—å –≤ 1.5 —Ä–∞–∑–∞\n"
            "- 'speed:0.5' - –ó–∞–º–µ–¥–ª–∏—Ç—å –≤ 2 —Ä–∞–∑–∞\n"
            "- 'convert:mp3' - –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ MP3\n"
            "- 'convert:wav' - –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ WAV"
        )
        self.bot.reply_to(message, help_message)

    def handle_audio(self, message):
        """Handle incoming audio files and voice messages."""
        try:
            processing_msg = self.bot.reply_to(message, "üéµ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à–µ –∞—É–¥–∏–æ...")


            if message.audio:
                file_info = self.bot.get_file(message.audio.file_id)
            else: 
                file_info = self.bot.get_file(message.voice.file_id)


            downloaded_file = self.bot.download_file(file_info.file_path)


            with tempfile.NamedTemporaryFile(delete=False, suffix='.ogg') as temp_input:
                temp_input.write(downloaded_file)
                temp_input.flush()


                audio = AudioFileClip(temp_input.name)


                caption = message.caption.lower() if message.caption else ""
                processed_audio = self._process_audio(audio, caption)


                output_suffix = '.mp3'
                if caption and 'convert:wav' in caption:
                    output_suffix = '.wav'

                with tempfile.NamedTemporaryFile(delete=False, suffix=output_suffix) as temp_output:
                    processed_audio.write_audiofile(temp_output.name)
                    processed_audio.close()


                    with open(temp_output.name, 'rb') as audio_file:
                        self.bot.send_audio(
                            message.chat.id,
                            audio_file,
                            caption="‚ú® –í–æ—Ç –≤–∞—à–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∞—É–¥–∏–æ!"
                        )


                    os.unlink(temp_output.name)

            os.unlink(temp_input.name)
            self.bot.delete_message(message.chat.id, processing_msg.message_id)

        except Exception as e:
            self.bot.reply_to(message, f"‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

    def _process_audio(self, audio: AudioFileClip, caption: str) -> AudioFileClip:
        """Process the audio according to the caption instructions."""
        if not caption:
            return audio


        if 'speed:' in caption:
            speed = float(caption.split('speed:')[1].split()[0])
            audio = audio.speedx(speed)

        return audio

    def run(self):
        """Run the bot."""
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
        self.bot.polling(none_stop=True)

if __name__ == "__main__":
    bot = AudioBot("7946249283:AAEnvin9qvyXaoICRPewub_wSdEiVmFH0fo")
    bot.run()
